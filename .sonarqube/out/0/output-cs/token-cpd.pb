øE
IC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Startup.cs
	namespace{{ 	
AeS{{
 
.{{ 
ADFSSAML_MAX{{ 
{|| 
public}} 

class}} 
Startup}} 
{~~ 
public 
Startup 
( 
IWebHostEnvironment *
env+ .
). /
{
ÄÄ 	
var
ÅÅ 
builder
ÅÅ 
=
ÅÅ 
new
ÅÅ "
ConfigurationBuilder
ÅÅ 2
(
ÅÅ2 3
)
ÅÅ3 4
.
ÇÇ 
SetBasePath
ÇÇ 
(
ÇÇ 
env
ÇÇ  
.
ÇÇ  !
ContentRootPath
ÇÇ! 0
)
ÇÇ0 1
.
ÉÉ 
AddJsonFile
ÉÉ 
(
ÉÉ 
$str
ÉÉ /
,
ÉÉ/ 0
optional
ÉÉ1 9
:
ÉÉ9 :
false
ÉÉ; @
,
ÉÉ@ A
reloadOnChange
ÉÉB P
:
ÉÉP Q
true
ÉÉR V
)
ÉÉV W
.
ÑÑ 
AddJsonFile
ÑÑ 
(
ÑÑ 
$str
ÑÑ `
,
ÑÑ` a
optional
ÑÑb j
:
ÑÑj k
true
ÑÑl p
,
ÑÑp q
reloadOnChangeÑÑr Ä
:ÑÑÄ Å
trueÑÑÇ Ü
)ÑÑÜ á
;ÑÑá à
Configuration
ÜÜ 
=
ÜÜ 
builder
ÜÜ #
.
ÜÜ# $
Build
ÜÜ$ )
(
ÜÜ) *
)
ÜÜ* +
;
ÜÜ+ ,
}
áá 	
public
ââ 
IConfiguration
ââ 
Configuration
ââ +
{
ââ, -
get
ââ. 1
;
ââ1 2
}
ââ3 4
public
ää 
string
ää 

CustomerID
ää  
{
ää! "
get
ää# &
;
ää& '
set
ää( +
;
ää+ ,
}
ää- .
public
££ 
void
££ 
ConfigureServices
££ %
(
££% & 
IServiceCollection
££& 8
services
££9 A
)
££A B
{
§§ 	
services
¶¶ 
.
¶¶ 
AddSingleton
¶¶ !
<
¶¶! ""
IHttpContextAccessor
¶¶" 6
,
¶¶6 7!
HttpContextAccessor
¶¶8 K
>
¶¶K L
(
¶¶L M
)
¶¶M N
;
¶¶N O
services
®® 
.
®® 
AddRazorPages
®® "
(
®®" #
)
®®# $
;
®®$ %

CustomerID
≠≠ 
=
≠≠ 
$str
≠≠ "
;
≠≠" #
services
ÆÆ 
.
ÆÆ 
AddRazorPages
ÆÆ "
(
ÆÆ" #
)
ÆÆ# $
;
ÆÆ$ %
services
±± 
.
±± 
	Configure
±± 
<
±±  
Saml2Configuration
±± 1
>
±±1 2
(
±±2 3
Configuration
±±3 @
.
±±@ A

GetSection
±±A K
(
±±K L
$str
±±L S
)
±±S T
)
±±T U
;
±±U V
var
≥≥ 
idpMetadata
≥≥ 
=
≥≥ 
Configuration
≥≥ +
[
≥≥+ ,
$"
≥≥, .
$str
≥≥. 4
{
≥≥4 5

CustomerID
≥≥5 ?
}
≥≥? @
$str
≥≥@ L
"
≥≥L M
]
≥≥M N
;
≥≥N O
if
¥¥ 
(
¥¥ 
string
¥¥ 
.
¥¥  
IsNullOrWhiteSpace
¥¥ )
(
¥¥) *
idpMetadata
¥¥* 5
)
¥¥5 6
)
¥¥6 7
{
µµ 
throw
∂∂ 
new
∂∂ 
	Exception
∂∂ #
(
∂∂# $
$str
∂∂$ e
)
∂∂e f
;
∂∂f g
}
∑∑ 
services
ππ 
.
ππ 
	Configure
ππ 
<
ππ  
Saml2Configuration
ππ 1
>
ππ1 2
(
ππ2 3 
saml2Configuration
ππ3 E
=>
ππF H
{
∫∫  
saml2Configuration
ªª "
.
ªª" #!
AllowedAudienceUris
ªª# 6
.
ªª6 7
Add
ªª7 :
(
ªª: ; 
saml2Configuration
ªª; M
.
ªªM N
Issuer
ªªN T
)
ªªT U
;
ªªU V
var
ΩΩ 
entityDescriptor
ΩΩ $
=
ΩΩ% &
new
ΩΩ' *
EntityDescriptor
ΩΩ+ ;
(
ΩΩ; <
)
ΩΩ< =
;
ΩΩ= >
entityDescriptor
ææ  
.
ææ  !)
ReadIdPSsoDescriptorFromUrl
ææ! <
(
ææ< =
new
ææ= @
Uri
ææA D
(
ææD E
Configuration
ææE R
[
ææR S
$"
ææS U
$str
ææU [
{
ææ[ \

CustomerID
ææ\ f
}
ææf g
$str
ææg s
"
ææs t
]
ææt u
)
ææu v
)
ææv w
;
ææw x
if
øø 
(
øø 
entityDescriptor
øø $
.
øø$ %
IdPSsoDescriptor
øø% 5
!=
øø6 8
null
øø9 =
)
øø= >
{
¿¿  
saml2Configuration
¡¡ &
.
¡¡& '%
SingleSignOnDestination
¡¡' >
=
¡¡? @
entityDescriptor
¡¡A Q
.
¡¡Q R
IdPSsoDescriptor
¡¡R b
.
¡¡b c"
SingleSignOnServices
¡¡c w
.
¡¡w x
First
¡¡x }
(
¡¡} ~
)
¡¡~ 
.¡¡ Ä
Location¡¡Ä à
;¡¡à â 
saml2Configuration
¬¬ &
.
¬¬& '-
SignatureValidationCertificates
¬¬' F
.
¬¬F G
AddRange
¬¬G O
(
¬¬O P
entityDescriptor
¬¬P `
.
¬¬` a
IdPSsoDescriptor
¬¬a q
.
¬¬q r"
SigningCertificates¬¬r Ö
)¬¬Ö Ü
;¬¬Ü á
}
√√ 
else
ƒƒ 
{
≈≈ 
throw
∆∆ 
new
∆∆ 
	Exception
∆∆ '
(
∆∆' (
$str
∆∆( T
)
∆∆T U
;
∆∆U V
}
«« 
}
»» 
)
»» 
;
»» 
services
   
.
   
AddSaml2
   
(
   
)
   
;
    
}
ÀÀ 	
public
‘‘ 
void
‘‘ 
	Configure
‘‘ 
(
‘‘ !
IApplicationBuilder
‘‘ 1
app
‘‘2 5
,
‘‘5 6!
IWebHostEnvironment
‘‘7 J
env
‘‘K N
)
‘‘N O
{
’’ 	
if
÷÷ 
(
÷÷ 
env
÷÷ 
.
÷÷ 
IsDevelopment
÷÷ !
(
÷÷! "
)
÷÷" #
)
÷÷# $
{
◊◊ 
app
ÿÿ 
.
ÿÿ '
UseDeveloperExceptionPage
ÿÿ -
(
ÿÿ- .
)
ÿÿ. /
;
ÿÿ/ 0
}
ŸŸ 
else
⁄⁄ 
{
€€ 
app
‹‹ 
.
‹‹ !
UseExceptionHandler
‹‹ '
(
‹‹' (
$str
‹‹( 0
)
‹‹0 1
;
‹‹1 2
app
›› 
.
›› 
UseHsts
›› 
(
›› 
)
›› 
;
›› 
}
ﬁﬁ 
app
‚‚ 
.
‚‚ 
Use
‚‚ 
(
‚‚ 
async
‚‚ 
(
‚‚ 
context
‚‚ "
,
‚‚" #
next
‚‚$ (
)
‚‚( )
=>
‚‚* ,
{
„„ 
var
ÂÂ 

customerId
ÂÂ 
=
ÂÂ  
context
ÂÂ! (
.
ÂÂ( )
Request
ÂÂ) 0
.
ÂÂ0 1
Query
ÂÂ1 6
[
ÂÂ6 7
$str
ÂÂ7 C
]
ÂÂC D
.
ÂÂD E
ToString
ÂÂE M
(
ÂÂM N
)
ÂÂN O
;
ÂÂO P
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
string
ÁÁ 
.
ÁÁ 
IsNullOrEmpty
ÁÁ )
(
ÁÁ) *

customerId
ÁÁ* 4
)
ÁÁ4 5
)
ÁÁ5 6
{
ËË 
context
ÍÍ 
.
ÍÍ 
Items
ÍÍ !
[
ÍÍ! "
$str
ÍÍ" .
]
ÍÍ. /
=
ÍÍ0 1

customerId
ÍÍ2 <
;
ÍÍ< =
}
ÎÎ 
await
ÌÌ 
next
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÓÓ 
)
ÓÓ 
;
ÓÓ 
app
 
.
 !
UseHttpsRedirection
 #
(
# $
)
$ %
;
% &
app
ÒÒ 
.
ÒÒ 
UseStaticFiles
ÒÒ 
(
ÒÒ 
)
ÒÒ  
;
ÒÒ  !
app
ÛÛ 
.
ÛÛ 

UseRouting
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
app
ÙÙ 
.
ÙÙ 
UseSaml2
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
app
ıı 
.
ıı 
UseAuthorization
ıı  
(
ıı  !
)
ıı! "
;
ıı" #
app
˜˜ 
.
˜˜ 
UseEndpoints
˜˜ 
(
˜˜ 
	endpoints
˜˜ &
=>
˜˜' )
{
¯¯ 
	endpoints
˘˘ 
.
˘˘ 
MapRazorPages
˘˘ '
(
˘˘' (
)
˘˘( )
;
˘˘) *
	endpoints
˙˙ 
.
˙˙  
MapControllerRoute
˙˙ ,
(
˙˙, -
name
˚˚ 
:
˚˚ 
$str
˚˚ #
,
˚˚# $
pattern
¸¸ 
:
¸¸ 
$str
¸¸ E
)
¸¸E F
;
¸¸F G
}
˝˝ 
)
˝˝ 
;
˝˝ 
}
˛˛ 	
}
ˇˇ 
}ÄÄ ãe
SC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\SecureQueryString.cs
	namespace 	
AeS
 
. 
ADFSSAML_MAX 
{ 
public		 

class		 
SecureQueryString		 "
:		# $
NameValueCollection		% 8
{

 
private 
const 
string 
timeStampKey )
=* +
$str, ;
;; <
private 
const 
string 
	cryptoKey &
=' (
$str) >
;> ?
private 
SecureQueryString !
.! "
Level" '
_Scope( .
;. /
private 
readonly 
byte 
[ 
] 
IV  "
=# $
new% (
byte) -
[- .
]. /
{0 1
$num2 5
,5 6
$num7 8
,8 9
$num: <
,< =
$num> @
,@ A
$numB C
,C D
$numE G
,G H
$numI L
,L M
$numN P
}Q R
;R S
public 
string 
EncryptedString %
{ 	
get 
{ 
return 
HttpUtility "
." #
	UrlEncode# ,
(, -
this- 1
.1 2
encrypt2 9
(9 :
this: >
.> ?
	serialize? H
(H I
)I J
)J K
)K L
;L M
} 
} 	
public 
SecureQueryString  
.  !
Level! &
Scope' ,
{ 	
get 
{ 
return 
this 
. 
_Scope "
;" #
}   
set!! 
{"" 
this## 
.## 
_Scope## 
=## 
value## #
;### $
}$$ 
}%% 	
public'' 
SecureQueryString''  
(''  !
)''! "
{(( 	
})) 	
public++ 
SecureQueryString++  
(++  !
string++! '
encryptedString++( 7
)++7 8
{,, 	
this-- 
.-- 
deserialize-- 
(-- 
this-- !
.--! "
decrypt--" )
(--) *
encryptedString--* 9
)--9 :
)--: ;
;--; <
}.. 	
private00 
string00 
decrypt00 
(00 
string00 % 
encryptedQueryString00& :
)00: ;
{11 	
string22 
str22 
;22 
try33 
{44 
byte55 
[55 
]55 
numArray55 
=55  !
Convert55" )
.55) *
FromBase64String55* :
(55: ; 
encryptedQueryString55; O
)55O P
;55P Q*
TripleDESCryptoServiceProvider66 .*
tripleDESCryptoServiceProvider66/ M
=66N O
new66P S*
TripleDESCryptoServiceProvider66T r
(66r s
)66s t
;66t u$
MD5CryptoServiceProvider77 ($
mD5CryptoServiceProvider77) A
=77B C
new77D G$
MD5CryptoServiceProvider77H `
(77` a
)77a b
;77b c*
tripleDESCryptoServiceProvider88 .
.88. /
Key88/ 2
=883 4$
mD5CryptoServiceProvider885 M
.88M N
ComputeHash88N Y
(88Y Z
Encoding88Z b
.88b c
ASCII88c h
.88h i
GetBytes88i q
(88q r
$str	88r á
)
88á à
)
88à â
;
88â ä*
tripleDESCryptoServiceProvider99 .
.99. /
IV99/ 1
=992 3
this994 8
.998 9
IV999 ;
;99; <
str:: 
=:: 
Encoding:: 
.:: 
ASCII:: $
.::$ %
	GetString::% .
(::. /*
tripleDESCryptoServiceProvider::/ M
.::M N
CreateDecryptor::N ]
(::] ^
)::^ _
.::_ `
TransformFinalBlock::` s
(::s t
numArray::t |
,::| }
$num::~ 
,	:: Ä
(
::Å Ç
int
::Ç Ö
)
::Ö Ü
numArray
::Ü é
.
::é è
Length
::è ï
)
::ï ñ
)
::ñ ó
;
::ó ò
};; 
catch<< 
(<< "
CryptographicException<< )"
cryptographicException<<* @
)<<@ A
{== 
throw>> 
new>> 
	Exception>> #
(>># $
$str>>$ 9
)>>9 :
;>>: ;
}?? 
catch@@ 
(@@ 
FormatException@@ "
formatException@@# 2
)@@2 3
{AA 
throwBB 
newBB 
	ExceptionBB #
(BB# $
$strBB$ 9
)BB9 :
;BB: ;
}CC 
returnDD 
strDD 
;DD 
}EE 	
privateGG 
voidGG 
deserializeGG  
(GG  !
stringGG! ' 
decryptedQueryStringGG( <
)GG< =
{HH 	
stringII 
strII 
=II 
$strII 
;II 
stringJJ 
str1JJ 
=JJ 
$strJJ 
;JJ 
stringKK 
str2KK 
=KK 
$strKK 
;KK 
stringLL 
str3LL 
=LL 
$strLL 
;LL 
stringMM 
[MM 
]MM 
	strArraysMM 
=MM   
decryptedQueryStringMM! 5
.MM5 6
SplitMM6 ;
(MM; <
newMM< ?
charMM@ D
[MMD E
]MME F
{MMG H
$charMMI L
}MMM N
)MMN O
;MMO P
forNN 
(NN 
intNN 
iNN 
=NN 
$numNN 
;NN 
iNN 
<NN 
(NN  !
intNN! $
)NN$ %
	strArraysNN% .
.NN. /
LengthNN/ 5
;NN5 6
iNN7 8
++NN8 :
)NN: ;
{OO 
stringPP 
str4PP 
=PP 
	strArraysPP '
[PP' (
iPP( )
]PP) *
;PP* +
stringQQ 
[QQ 
]QQ 

strArrays1QQ #
=QQ$ %
str4QQ& *
.QQ* +
SplitQQ+ 0
(QQ0 1
newQQ1 4
charQQ5 9
[QQ9 :
]QQ: ;
{QQ< =
$charQQ> A
}QQB C
)QQC D
;QQD E
ifRR 
(RR 
(RR 
intRR 
)RR 

strArrays1RR #
.RR# $
LengthRR$ *
==RR+ -
$numRR. /
)RR/ 0
{SS 
ifTT 
(TT 

strArrays1TT "
[TT" #
$numTT# $
]TT$ %
==TT& (
$strTT) <
)TT< =
{UU 
strVV 
=VV 

strArrays1VV (
[VV( )
$numVV) *
]VV* +
;VV+ ,
}WW 
elseXX 
ifXX 
(XX 

strArrays1XX '
[XX' (
$numXX( )
]XX) *
==XX+ -
$strXX. ?
)XX? @
{YY 
str1ZZ 
=ZZ 

strArrays1ZZ )
[ZZ) *
$numZZ* +
]ZZ+ ,
;ZZ, -
}[[ 
else\\ 
if\\ 
(\\ 

strArrays1\\ '
[\\' (
$num\\( )
]\\) *
==\\+ -
$str\\. D
)\\D E
{]] 
str2^^ 
=^^ 

strArrays1^^ )
[^^) *
$num^^* +
]^^+ ,
;^^, -
}__ 
else`` 
if`` 
(`` 

strArrays1`` '
[``' (
$num``( )
]``) *
!=``+ -
$str``. D
)``D E
{aa 
thisbb 
.bb 
Addbb  
(bb  !

strArrays1bb! +
[bb+ ,
$numbb, -
]bb- .
,bb. /

strArrays1bb0 :
[bb: ;
$numbb; <
]bb< =
)bb= >
;bb> ?
}cc 
elsedd 
{ee 
str3ff 
=ff 

strArrays1ff )
[ff) *
$numff* +
]ff+ ,
;ff, -
}gg 
}hh 
}ii 
}
∞∞ 	
private
≤≤ 
string
≤≤ 
encrypt
≤≤ 
(
≤≤ 
string
≤≤ %#
serializedQueryString
≤≤& ;
)
≤≤; <
{
≥≥ 	
byte
¥¥ 
[
¥¥ 
]
¥¥ 
bytes
¥¥ 
=
¥¥ 
Encoding
¥¥ #
.
¥¥# $
ASCII
¥¥$ )
.
¥¥) *
GetBytes
¥¥* 2
(
¥¥2 3#
serializedQueryString
¥¥3 H
)
¥¥H I
;
¥¥I J,
TripleDESCryptoServiceProvider
µµ *,
tripleDESCryptoServiceProvider
µµ+ I
=
µµJ K
new
µµL O,
TripleDESCryptoServiceProvider
µµP n
(
µµn o
)
µµo p
;
µµp q&
MD5CryptoServiceProvider
∂∂ $&
mD5CryptoServiceProvider
∂∂% =
=
∂∂> ?
new
∂∂@ C&
MD5CryptoServiceProvider
∂∂D \
(
∂∂\ ]
)
∂∂] ^
;
∂∂^ _,
tripleDESCryptoServiceProvider
∑∑ *
.
∑∑* +
Key
∑∑+ .
=
∑∑/ 0&
mD5CryptoServiceProvider
∑∑1 I
.
∑∑I J
ComputeHash
∑∑J U
(
∑∑U V
Encoding
∑∑V ^
.
∑∑^ _
ASCII
∑∑_ d
.
∑∑d e
GetBytes
∑∑e m
(
∑∑m n
$str∑∑n É
)∑∑É Ñ
)∑∑Ñ Ö
;∑∑Ö Ü,
tripleDESCryptoServiceProvider
∏∏ *
.
∏∏* +
IV
∏∏+ -
=
∏∏. /
this
∏∏0 4
.
∏∏4 5
IV
∏∏5 7
;
∏∏7 8
return
ππ 
Convert
ππ 
.
ππ 
ToBase64String
ππ )
(
ππ) *,
tripleDESCryptoServiceProvider
ππ* H
.
ππH I
CreateEncryptor
ππI X
(
ππX Y
)
ππY Z
.
ππZ [!
TransformFinalBlock
ππ[ n
(
ππn o
bytes
ππo t
,
ππt u
$num
ππv w
,
ππw x
(
ππy z
int
ππz }
)
ππ} ~
bytesππ~ É
.ππÉ Ñ
LengthππÑ ä
)ππä ã
)ππã å
;ππå ç
}
∫∫ 	
private
ºº 
string
ºº 
	serialize
ºº  
(
ºº  !
)
ºº! "
{
ΩΩ 	
int
ææ 
i
ææ 
;
ææ 
StringBuilder
øø 
stringBuilder
øø '
=
øø( )
new
øø* -
StringBuilder
øø. ;
(
øø; <
)
øø< =
;
øø= >
string
¿¿ 
[
¿¿ 
]
¿¿ 
allKeys
¿¿ 
=
¿¿ 
this
¿¿ #
.
¿¿# $
AllKeys
¿¿$ +
;
¿¿+ ,
for
¡¡ 
(
¡¡ 
i
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
i
¡¡ 
<
¡¡ 
(
¡¡ 
int
¡¡  
)
¡¡  !
allKeys
¡¡! (
.
¡¡( )
Length
¡¡) /
;
¡¡/ 0
i
¡¡1 2
++
¡¡2 4
)
¡¡4 5
{
¬¬ 
string
√√ 
str
√√ 
=
√√ 
allKeys
√√ $
[
√√$ %
i
√√% &
]
√√& '
;
√√' (
stringBuilder
ƒƒ 
.
ƒƒ 
Append
ƒƒ $
(
ƒƒ$ %
str
ƒƒ% (
)
ƒƒ( )
;
ƒƒ) *
stringBuilder
≈≈ 
.
≈≈ 
Append
≈≈ $
(
≈≈$ %
$char
≈≈% (
)
≈≈( )
;
≈≈) *
stringBuilder
∆∆ 
.
∆∆ 
Append
∆∆ $
(
∆∆$ %
base
∆∆% )
[
∆∆) *
str
∆∆* -
]
∆∆- .
)
∆∆. /
;
∆∆/ 0
stringBuilder
«« 
.
«« 
Append
«« $
(
««$ %
$char
««% (
)
««( )
;
««) *
}
»» 
return
ÂÂ 
stringBuilder
ÂÂ  
.
ÂÂ  !
ToString
ÂÂ! )
(
ÂÂ) *
)
ÂÂ* +
;
ÂÂ+ ,
}
ÊÊ 	
public
ËË 
override
ËË 
string
ËË 
ToString
ËË '
(
ËË' (
)
ËË( )
{
ÈÈ 	
return
ÍÍ 
this
ÍÍ 
.
ÍÍ 
EncryptedString
ÍÍ '
;
ÍÍ' (
}
ÎÎ 	
public
ÌÌ 
enum
ÌÌ 
Level
ÌÌ 
{
ÓÓ 	
	UserLevel
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
CompanyOULevel
 
=
 
$num
 
,
 
CompanyLevel
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
}
ÚÚ 	
}
ÙÙ 
}ıı √

IC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Program.cs
	namespace

 	
AeS


 
.

 
ADFSSAML_MAX

 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ã
VC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\Privacy.cshtml.cs
	namespace		 	
AeS		
 
.		 
ADFSSAML_MAX		 
.		 
Pages		  
{

 
public 

class 
PrivacyModel 
: 
	PageModel  )
{ 
private 
readonly 
ILogger  
<  !
PrivacyModel! -
>- .
_logger/ 6
;6 7
public 
PrivacyModel 
( 
ILogger #
<# $
PrivacyModel$ 0
>0 1
logger2 8
)8 9
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
} 	
} 
} Å
TC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\Index.cshtml.cs
	namespace		 	
AeS		
 
.		 
ADFSSAML_MAX		 
.		 
Pages		  
{

 
public 

class 

IndexModel 
: 
	PageModel '
{ 
private 
readonly 
ILogger  
<  !

IndexModel! +
>+ ,
_logger- 4
;4 5
public 

IndexModel 
( 
ILogger !
<! "

IndexModel" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
} 	
} 
} Ω
TC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\Error.cshtml.cs
	namespace

 	
AeS


 
.

 
ADFSSAML_MAX

 
.

 
Pages

  
{ 
[ 
ResponseCache 
( 
Duration 
= 
$num 
,  
Location! )
=* +!
ResponseCacheLocation, A
.A B
NoneB F
,F G
NoStoreH O
=P Q
trueR V
)V W
]W X
public 

class 

ErrorModel 
: 
	PageModel '
{ 
public 
string 
	RequestId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
ShowRequestId !
=>" $
!% &
string& ,
., -
IsNullOrEmpty- :
(: ;
	RequestId; D
)D E
;E F
private 
readonly 
ILogger  
<  !

ErrorModel! +
>+ ,
_logger- 4
;4 5
public 

ErrorModel 
( 
ILogger !
<! "

ErrorModel" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
	RequestId 
= 
Activity  
.  !
Current! (
?( )
.) *
Id* ,
??- /
HttpContext0 ;
.; <
TraceIdentifier< K
;K L
} 	
} 
} –#
WC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\ClaimsTransform.cs
	namespace 	
AeS
 
. 
ADFSSAML_MAX 
. 
Identity #
{ 
public 

static 
class 
ClaimsTransform '
{		 
public

 
static

 
ClaimsPrincipal

 %
	Transform

& /
(

/ 0
ClaimsPrincipal

0 ?
incomingPrincipal

@ Q
)

Q R
{ 	
if 
( 
! 
incomingPrincipal "
." #
Identity# +
.+ ,
IsAuthenticated, ;
); <
{ 
return 
incomingPrincipal (
;( )
} 
return !
CreateClaimsPrincipal (
(( )
incomingPrincipal) :
): ;
;; <
} 	
private 
static 
ClaimsPrincipal &!
CreateClaimsPrincipal' <
(< =
ClaimsPrincipal= L
incomingPrincipalM ^
)^ _
{ 	
var 
claims 
= 
new 
List !
<! "
Claim" '
>' (
(( )
)) *
;* +
claims 
. 
AddRange 
( 
incomingPrincipal -
.- .
Claims. 4
)4 5
;5 6
return 
new 
ClaimsPrincipal &
(& '
new' *
ClaimsIdentity+ 9
(9 :
claims: @
,@ A
incomingPrincipalB S
.S T
IdentityT \
.\ ]
AuthenticationType] o
,o p

ClaimTypesq {
.{ |
NameIdentifier	| ä
,
ä ã

ClaimTypes
å ñ
.
ñ ó
Role
ó õ
)
õ ú
{   
BootstrapContext!!  
=!!! "
(!!# $
(!!$ %
ClaimsIdentity!!% 3
)!!3 4
incomingPrincipal!!4 E
.!!E F
Identity!!F N
)!!N O
.!!O P
BootstrapContext!!P `
}"" 
)"" 
;"" 
}## 	
private%% 
static%% 
IEnumerable%% "
<%%" #
Claim%%# (
>%%( ) 
GetSaml2LogoutClaims%%* >
(%%> ?
ClaimsPrincipal%%? N
	principal%%O X
)%%X Y
{&& 	
yield'' 
return'' 
GetClaim'' !
(''! "
	principal''" +
,''+ ,
Saml2ClaimTypes''- <
.''< =
NameId''= C
)''C D
;''D E
yield(( 
return(( 
GetClaim(( !
(((! "
	principal((" +
,((+ ,
Saml2ClaimTypes((- <
.((< =
NameIdFormat((= I
)((I J
;((J K
yield)) 
return)) 
GetClaim)) !
())! "
	principal))" +
,))+ ,
Saml2ClaimTypes))- <
.))< =
SessionIndex))= I
)))I J
;))J K
}** 	
private,, 
static,, 
Claim,, 
GetClaim,, %
(,,% &
ClaimsPrincipal,,& 5
	principal,,6 ?
,,,? @
string,,A G
	claimType,,H Q
),,Q R
{-- 	
return.. 
(.. 
(.. 
ClaimsIdentity.. #
)..# $
	principal..$ -
...- .
Identity... 6
)..6 7
...7 8
Claims..8 >
...> ?
Where..? D
(..D E
c..E F
=>..G I
c..J K
...K L
Type..L P
==..Q S
	claimType..T ]
)..] ^
...^ _
FirstOrDefault.._ m
(..m n
)..n o
;..o p
}// 	
private11 
static11 
string11 
GetClaimValue11 +
(11+ ,
ClaimsPrincipal11, ;
	principal11< E
,11E F
string11G M
	claimType11N W
)11W X
{22 	
var33 
claim33 
=33 
GetClaim33  
(33  !
	principal33! *
,33* +
	claimType33, 5
)335 6
;336 7
return44 
claim44 
!=44 
null44  
?44! "
claim44# (
.44( )
Value44) .
:44/ 0
null441 5
;445 6
}55 	
}66 
}77 ª
UC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\Claims.cshtml.cs
	namespace

 	
AeS


 
.

 
ADFSSAML_MAX

 
.

 
Pages

  
{ 
[ 
	Authorize 
] 
public 

class 
ClaimsModel 
: 
	PageModel (
{ 
private 
readonly 
ILogger  
<  !
ClaimsModel! ,
>, -
_logger. 5
;5 6
public 
ClaimsModel 
( 
ILogger "
<" #
ClaimsModel# .
>. /
logger0 6
)6 7
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
} 	
} 
} ã2
VC:\Users\devan\Downloads\AeS.ADFSSAML_MAX (1)\AeS.ADFSSAML_MAX\Pages\AuthController.cs
	namespace 	
AeS
 
. 
ADFSSAML_MAX 
. 
Controllers &
{ 
[ 
AllowAnonymous 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
AuthController 
:  !

Controller" ,
{ 
const 
string 
relayStateReturnUrl (
=) *
$str+ 6
;6 7
private 
readonly 
Saml2Configuration +
config, 2
;2 3
public 
AuthController 
( 
IOptions &
<& '
Saml2Configuration' 9
>9 :
configAccessor; I
)I J
{ 	
config 
= 
configAccessor #
.# $
Value$ )
;) *
} 	
[ 	
Route	 
( 
$str 
) 
] 
public 
IActionResult 
Login "
(" #
string# )
	returnUrl* 3
=4 5
null6 :
): ;
{ 	
var   
binding   
=   
new    
Saml2RedirectBinding   2
(  2 3
)  3 4
;  4 5
binding!! 
.!! 
SetRelayStateQuery!! &
(!!& '
new!!' *

Dictionary!!+ 5
<!!5 6
string!!6 <
,!!< =
string!!> D
>!!D E
{!!F G
{!!H I
relayStateReturnUrl!!J ]
,!!] ^
	returnUrl!!_ h
??!!i k
Url!!l o
.!!o p
Content!!p w
(!!w x
$str!!x |
)!!| }
}!!~ 
}
!!Ä Å
)
!!Å Ç
;
!!Ç É
return## 
binding## 
.## 
Bind## 
(##  
new##  #
Saml2AuthnRequest##$ 5
(##5 6
config##6 <
)##< =
)##= >
.##> ?
ToActionResult##? M
(##M N
)##N O
;##O P
}$$ 	
[&& 	
Route&&	 
(&& 
$str&& )
)&&) *
]&&* +
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' ($
AssertionConsumerService'') A
(''A B
)''B C
{(( 	
var)) 
binding)) 
=)) 
new)) 
Saml2PostBinding)) .
()). /
)))/ 0
;))0 1
var** 
saml2AuthnResponse** "
=**# $
new**% (
Saml2AuthnResponse**) ;
(**; <
config**< B
)**B C
;**C D
binding,, 
.,, 
ReadSamlResponse,, $
(,,$ %
Request,,% ,
.,,, - 
ToGenericHttpRequest,,- A
(,,A B
),,B C
,,,C D
saml2AuthnResponse,,E W
),,W X
;,,X Y
if-- 
(-- 
saml2AuthnResponse-- "
.--" #
Status--# )
!=--* ,
Saml2StatusCodes--- =
.--= >
Success--> E
)--E F
{.. 
throw// 
new// #
AuthenticationException// 1
(//1 2
$"//2 4
$str//4 J
{//J K
saml2AuthnResponse//K ]
.//] ^
Status//^ d
}//d e
"//e f
)//f g
;//g h
}00 
binding11 
.11 
Unbind11 
(11 
Request11 "
.11" # 
ToGenericHttpRequest11# 7
(117 8
)118 9
,119 :
saml2AuthnResponse11; M
)11M N
;11N O
await22 
saml2AuthnResponse22 $
.22$ %
CreateSession22% 2
(222 3
HttpContext223 >
,22> ?
claimsTransform22@ O
:22O P
(22Q R
claimsPrincipal22R a
)22a b
=>22c e
ClaimsTransform22f u
.22u v
	Transform22v 
(	22 Ä
claimsPrincipal
22Ä è
)
22è ê
)
22ê ë
;
22ë í
var44 
relayStateQuery44 
=44  !
binding44" )
.44) *
GetRelayStateQuery44* <
(44< =
)44= >
;44> ?
var55 
	returnUrl55 
=55 
relayStateQuery55 +
.55+ ,
ContainsKey55, 7
(557 8
relayStateReturnUrl558 K
)55K L
?55M N
relayStateQuery55O ^
[55^ _
relayStateReturnUrl55_ r
]55r s
:55t u
Url55v y
.55y z
Content	55z Å
(
55Å Ç
$str
55Ç Ü
)
55Ü á
;
55á à
return66 
Redirect66 
(66 
	returnUrl66 %
)66% &
;66& '
}77 	
[99 	
HttpPost99	 
(99 
$str99 
)99 
]99 
[:: 	$
ValidateAntiForgeryToken::	 !
]::! "
public;; 
async;; 
Task;; 
<;; 
IActionResult;; '
>;;' (
Logout;;) /
(;;/ 0
);;0 1
{<< 	
if== 
(== 
!== 
User== 
.== 
Identity== 
.== 
IsAuthenticated== .
)==. /
{>> 
return?? 
Redirect?? 
(??  
Url??  #
.??# $
Content??$ +
(??+ ,
$str??, 0
)??0 1
)??1 2
;??2 3
}@@ 
varBB 
bindingBB 
=BB 
newBB 
Saml2PostBindingBB .
(BB. /
)BB/ 0
;BB0 1
varCC 
saml2LogoutRequestCC "
=CC# $
awaitCC% *
newCC+ .
Saml2LogoutRequestCC/ A
(CCA B
configCCB H
,CCH I
UserCCJ N
)CCN O
.CCO P
DeleteSessionCCP ]
(CC] ^
HttpContextCC^ i
)CCi j
;CCj k
returnDD 
RedirectDD 
(DD 
$strDD  
)DD  !
;DD! "
}EE 	
}FF 
}GG 